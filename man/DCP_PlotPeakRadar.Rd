% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DCP_GraphFunctions.R
\name{DCP_PlotPeakRadar}
\alias{DCP_PlotPeakRadar}
\title{Radar plot of peak time
Make a circos histogram plot for peak time.}
\usage{
DCP_PlotPeakRadar(
  x,
  TOJR = NULL,
  RhyBothOnly = FALSE,
  sig.cut = list(param = "pvalue", fun = "<", val = 0.05),
  time.start = -6,
  Info1 = "groupI",
  Info2 = "groupII",
  filename = NULL,
  file.width = 8,
  file.height = 8,
  color = NULL,
  single.binwidth = 2,
  axis.text.size = 12,
  legend.position = "right"
)
}
\arguments{
\item{x}{DCP_Rhythmicity() output}

\item{TOJR}{toTOJR output. If NULL, rhythm.joint object in x will be used.}

\item{RhyBothOnly}{For two-group output, plot only RhyBoth genes or all rhythmic genes in separate groups?}

\item{sig.cut}{A list. Used only for single-group plot, only genes satisfying sig.cut will be plotted. If NULL then genes all genes in regardless of significance in rhythmicity will be plotted. \itemize{
\item param parameter used for the cutoff. Should be a column in x.
\item fun character string. Either "<", or ">"
\item val numeric. The value used for the cutoff}}

\item{time.start}{numeric. What time do you want the phase start? Default is -6, which is midnight if time is in ZT scale.}

\item{Info1}{character string. Used in the plot title for group I}

\item{Info2}{character string. Used in the plot title for group II (if exist).}

\item{filename}{character string. The filename for plot export. If NULL, the plot will not be saved.}

\item{file.width}{width of the export plot}

\item{file.height}{height of the export plot}

\item{color}{Input color. The length of the vector should be the same of the number of the groups.}

\item{single.binwidth}{numeric. The binwidth for plotting peak histogram.}

\item{axis.text.size}{Size for the axis text.}

\item{legend.position}{One of "left‚Äù, "top", "right", "bottom", or "none"}
}
\value{

}
\description{
Radar plot of peak time
Make a circos histogram plot for peak time.
}
\examples{
x = DCP_sim_data(ngene=1000, nsample=30, A1=c(2, 3), A2=c(2, 3),
phase1=c(0, pi/4), phase2=c(pi/2, pi*3/2),
M1=c(4, 6), M2=c(4, 6), sigma1=1, sigma2=1)
rhythm.res = DCP_Rhythmicity(x1 = x[[1]], x2 = x[[2]])
# Make a two-group plot:
DCP_PlotPeakRadar(rhythm.res)
# Make a one-group plot
DCP_PlotPeakRadar(rhythm.res$x1)
}
